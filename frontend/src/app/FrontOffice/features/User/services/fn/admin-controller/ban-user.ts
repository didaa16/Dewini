/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpHeaders, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

export interface BanUser$Params {
  id: number;
}

export function banUser(
  http: HttpClient,
  rootUrl: string,
  params: BanUser$Params,
  context?: HttpContext,
  options?: { headers: HttpHeaders }
): Observable<StrictHttpResponse<string>> {
  const rb = new RequestBuilder(rootUrl, banUser.PATH, 'put');
  if (params) {
    rb.path('id', params.id, {});
  }

  return http.request(
    rb.build({
      responseType: 'json',
      accept: 'application/json',
      context,
      ...options, // <- injecte les headers ici
    })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<string>;
    })
  );
}

banUser.PATH = '/admin/ban/{id}';
