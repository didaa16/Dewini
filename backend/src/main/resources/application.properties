spring.application.name=backend
# DB Configuration :
spring.datasource.url=jdbc:mysql://localhost:3306/Dewini?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
# Web Server (Tomcat) configuration :
server.port=8081
server.servlet.context-path=/api/v1
# Enable logging for CORS issues
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
# CORS filter logging
logging.level.org.springframework.web.filter.CorsFilter=DEBUG
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

# Inframedica API Configuration
infermedica.appId=29647537
infermedica.appKey=#################

#server.servlet.context-path=/backend
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Twilio Configuration
# Twilio (mode test - numéro vérifié uniquement)


spring.jpa.open-in-view=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
groq.api.key=#################
# Mail Configuration (Local SMTP)
# Configuration de base des badges
app.badge.base-url=${BASE_URL:http://localhost:8080}/api/badges
app.badge.expiration-days=2
app.badge.default-design=STANDARD
app.badge.qr-code-size=300
app.badge.image-width=600
app.badge.image-height=800
# Weather API
openweathermap.api.key=#################
stripe.key.public=#################
stripe.key.secret=#################
stripe.webhook.secret=#################
frontend.success-url=http://localhost:4200/payment-success
frontend.cancel-url=http://localhost:4200/events

spring.main.allow-circular-references=true
spring.jackson.date-format=yyyy-MM-dd HH:mm
spring.jackson.time-zone=UTC

# Configuration SMTP de base
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=rahmanimuhamed7@gmail.com
spring.mail.password=#################
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.debug=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Thymeleaf Configuration
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false
spring.mail.debug=true

# Web Configuration
spring.web.resources.static-locations=file:./uploads/
spring.servlet.multipart.max-file-size=50MB
# Pour voir les requêtes SQL

# OAuth2 Configuration - GitHub
spring.security.oauth2.client.registration.github.client-id=#################
spring.security.oauth2.client.registration.github.client-secret=#################
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.github.scope=user:email,read:user
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login

# OAuth2 Configuration - Google
spring.security.oauth2.client.registration.google.client-id=#################
spring.security.oauth2.client.registration.google.client-secret=#################
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
# Optimisations
spring.jpa.properties.hibernate.default_batch_fetch_size=20
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# OAuth2 Configuration - Facebook
spring.security.oauth2.client.registration.facebook.client-id=#################
spring.security.oauth2.client.registration.facebook.client-secret=#################
spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.facebook.scope=email,public_profile,user_birthday,user_gender
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v12.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v12.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/v12.0/me?fields=id,name,email,picture
spring.security.oauth2.client.provider.facebook.user-name-attribute=name

# SpringDoc Configuration (for OpenAPI)
springdoc.default-produces-media-type=application/json
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# src/main/resources/application.properties
cloudinary.cloud-name=#################
cloudinary.api-key=#################
cloudinary.api-secret=#################
spring.servlet.multipart.max-request-size=20MB
# Configuration Twilio unifiée
# Configuration Twilio unifiée
twilio.account.sid=#################
twilio.auth.token=#################

# Configuration pour le service SMS
twilio.phone.from=+#################
sms.test.number=+#################
# Configuration pour le service WhatsApp
twilio.whatsapp.from=whatsapp:+#################  # Votre numéro WhatsApp Twilio


# Application Configuration
application.urls.frontend.login=http://localhost:4200/login
application.urls.frontend.unban-request=http://localhost:4200/request-unban
application.security.jwt.expiration=3600000
application.security.jwt.refresh-expiration=86400000
application.security.jwt.secret-key=#################
application.mailing.from-email=rahmanimuhamed7@gmail.com
application.mailing.from-name=Dewini
application.mailing.frontend.activation-url=http://localhost:4200/activate-account
application.file.storage.location=./uploads
application.file.storage.allowed-extensions=.jpg,.jpeg,.png
application.face.api.url=http://localhost:8000
application.face.api.timeout=5000

# Logging Configuration
logging.level.org.springframework.web=DEBUG
logging.level.your.package.auth=DEBUG
spring.main.allow-bean-definition-overriding=true

